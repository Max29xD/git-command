---
import Layout from '$/layouts/Layout.astro'
import CommandCard from '$/components/CommandCard.astro'
import CategoryButton from '$/components/buttons/Category.astro'
import { getCollection } from 'astro:content'
import { translateCategory } from '$/lib/translates'
import { Categories, type Category } from '$/content/config'

const { searchParams } = Astro.url
const category = searchParams.get('category') || ('all' as Category | 'all')

const categories = ['all', ...Categories] as const

const commandFiles = await getCollection('commands')

const filteredCommands = commandFiles.filter(
  ({ data: { category: commandCategory } }) =>
    !category || category === 'all' || category === commandCategory
)
---

<Layout
  title="Comandos de Git"
  description="Aprende los comandos más importantes de Git con ejemplos prácticos. Una guía completa en español para principiantes y avanzados sobre el control de versiones con Git."
>
  <main class="container mx-auto h-full px-8 py-12">
    <h1
      class="from-silver-100 to-silver-50 animate-gradientbg bg-gradient-to-r bg-clip-text text-center text-6xl font-bold text-transparent"
    >
      Guía de Comandos
      <span
        class="block bg-gradient-to-r from-violet-500 to-violet-300 bg-clip-text text-transparent"
      >
        Git
      </span>
    </h1>
    <p
      class="animate-gradientbg mb-12 bg-gradient-to-r from-violet-500 via-white to-violet-500 bg-[length:200%_auto] bg-clip-text text-center text-xl text-transparent"
    >
      Una guía interactiva de los comandos más útiles de Git
    </p>
    <div class="mb-8 flex flex-wrap justify-center gap-4">
      {
        categories.map(cat => (
          <CategoryButton
            href={cat === 'all' ? '/' : `?category=${cat}`}
            transition:name={cat}
          >
            {translateCategory(cat)}
          </CategoryButton>
        ))
      }
    </div>
    <div class="grid-auto-fit-lg grid gap-4">
      {
        filteredCommands.map(
          ({ slug, data: { command, description, category, difficulty } }) => (
            <CommandCard
              href={`/command/${slug}`}
              command={command}
              description={description}
              category={category}
              difficulty={difficulty}
              data-category={category}
            />
          )
        )
      }
    </div>
  </main>
</Layout>
